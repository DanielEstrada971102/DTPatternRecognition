# Generic Particle template generated by dtpr-package on Wed Apr 09 22:54:25 2025.
# Author:
#     [Your Name]
# Version:
#     0.0
#
# This class is a template for a generic particle class. It inherits from dtpr.base.Particle which 
# provides needed methods such as '__str__' '_init_from_ev' and '_init_from_dict'. Implement other
# class methods as needed.

from dtpr.base import Particle

class TestParticle(Particle):
    def __init__(self, index, ev=None, branches=None, **kwargs):
        """
        Initialize a TestParticle instance.

        description here...

        :param index: The index of the TestParticle.
        :type index: int
        .
        . (add more parameters here if needed)
        .
        """
        super().__init__(index, ev, branches, **kwargs)


if __name__ == '__main__':
    # Test the class here
    particle_instance = TestParticle(1)

    print(particle_instance)